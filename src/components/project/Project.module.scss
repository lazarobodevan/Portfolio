@mixin respond-to($breakpoint) {
    @media only screen and (min-width: $breakpoint) {
      @content;
    }
  }
.wrapper{
    display: grid;

    &:hover{
        .lottie{
            opacity: 1;
            transition: opacity .2s ease;
        }
    }

    .container {
        grid-column: 1/1;
        grid-row: 1/1;
        position: relative; /* Adicionando posição relativa para posicionamento do ruído */
        width: 300px;
        height: 170px;
        background-color: var(--primary3);
        overflow: hidden; /* Para esconder o ruído que estará fora dos limites da div */
        padding: 20px;
        border-radius: 10px;
        cursor: pointer;
        transition: box-shadow .5s ease;

        @include respond-to(768px) {
            width: 300px;
            height: 220px;
        }

        &:hover{
            box-shadow: var(--primary4) 0px 2px 8px 0px;

        }

        /* Adicionando ruído */
        &::after {
            content: "";
            position: absolute; /* Posicionamento absoluto em relação ao container */
            top: 0;
            left: 0;
            width: 100%; /* Garantindo que o ruído cubra toda a div */
            height: 100%;
            background-image: url(../header/noise.svg);
            pointer-events: none; /* Garantindo que o ruído não afete os eventos do mouse */
            opacity: 0.1; /* Ajuste a opacidade conforme necessário */
        }

        p {
            margin-top: 10px;

            @include respond-to(768px) {
                font-size: 18px;
            }
        }

        h4{
            @include respond-to(768px) {
                font-size: 20px;
            }
        }
    }
    .lottie{
        display: grid;
        width: 100px; 
        height: 100px;
        grid-column: 1/1;
        grid-row: 1/1;
        z-index: 10;
        align-self: flex-end;
        justify-self: flex-end;
        opacity: 0;
        transition: opacity .2s ease;
    }
}